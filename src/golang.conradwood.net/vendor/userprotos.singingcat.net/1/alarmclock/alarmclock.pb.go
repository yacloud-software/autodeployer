// Code generated by protoc-gen-go.
// source: userprotos.singingcat.net/1/alarmclock/alarmclock.proto
// DO NOT EDIT!

/*
Package alarmclock is a generated protocol buffer package.

It is generated from these files:
	userprotos.singingcat.net/1/alarmclock/alarmclock.proto

It has these top-level messages:
	Config
*/
package alarmclock

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// alarm clock config
type Config struct {
	Debug            bool   `protobuf:"varint,1,opt,name=Debug" json:"Debug,omitempty"`
	AlarmHour        uint32 `protobuf:"varint,2,opt,name=AlarmHour" json:"AlarmHour,omitempty"`
	AlarmMinute      uint32 `protobuf:"varint,3,opt,name=AlarmMinute" json:"AlarmMinute,omitempty"`
	AlarmDays        uint32 `protobuf:"varint,4,opt,name=AlarmDays" json:"AlarmDays,omitempty"`
	AlarmEnabled     uint32 `protobuf:"varint,5,opt,name=AlarmEnabled" json:"AlarmEnabled,omitempty"`
	AlarmSetYear     uint32 `protobuf:"varint,6,opt,name=AlarmSetYear" json:"AlarmSetYear,omitempty"`
	AlarmSetMonth    uint32 `protobuf:"varint,7,opt,name=AlarmSetMonth" json:"AlarmSetMonth,omitempty"`
	AlarmSetDay      uint32 `protobuf:"varint,8,opt,name=AlarmSetDay" json:"AlarmSetDay,omitempty"`
	AlarmSetHour     uint32 `protobuf:"varint,9,opt,name=AlarmSetHour" json:"AlarmSetHour,omitempty"`
	AlarmSetMinute   uint32 `protobuf:"varint,10,opt,name=AlarmSetMinute" json:"AlarmSetMinute,omitempty"`
	AlarmForTomorrow bool   `protobuf:"varint,11,opt,name=AlarmForTomorrow" json:"AlarmForTomorrow,omitempty"`
}

func (m *Config) Reset()                    { *m = Config{} }
func (m *Config) String() string            { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()               {}
func (*Config) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Config) GetDebug() bool {
	if m != nil {
		return m.Debug
	}
	return false
}

func (m *Config) GetAlarmHour() uint32 {
	if m != nil {
		return m.AlarmHour
	}
	return 0
}

func (m *Config) GetAlarmMinute() uint32 {
	if m != nil {
		return m.AlarmMinute
	}
	return 0
}

func (m *Config) GetAlarmDays() uint32 {
	if m != nil {
		return m.AlarmDays
	}
	return 0
}

func (m *Config) GetAlarmEnabled() uint32 {
	if m != nil {
		return m.AlarmEnabled
	}
	return 0
}

func (m *Config) GetAlarmSetYear() uint32 {
	if m != nil {
		return m.AlarmSetYear
	}
	return 0
}

func (m *Config) GetAlarmSetMonth() uint32 {
	if m != nil {
		return m.AlarmSetMonth
	}
	return 0
}

func (m *Config) GetAlarmSetDay() uint32 {
	if m != nil {
		return m.AlarmSetDay
	}
	return 0
}

func (m *Config) GetAlarmSetHour() uint32 {
	if m != nil {
		return m.AlarmSetHour
	}
	return 0
}

func (m *Config) GetAlarmSetMinute() uint32 {
	if m != nil {
		return m.AlarmSetMinute
	}
	return 0
}

func (m *Config) GetAlarmForTomorrow() bool {
	if m != nil {
		return m.AlarmForTomorrow
	}
	return false
}

func init() {
	proto.RegisterType((*Config)(nil), "alarmclock.Config")
}

func init() {
	proto.RegisterFile("userprotos.singingcat.net/1/alarmclock/alarmclock.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 307 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x64, 0x91, 0x31, 0x4f, 0xc3, 0x30,
	0x10, 0x46, 0x55, 0x4a, 0x4b, 0xeb, 0x52, 0x84, 0x2c, 0x06, 0x0f, 0x0c, 0x56, 0x85, 0x50, 0xc5,
	0x90, 0x0a, 0x31, 0x30, 0x20, 0x06, 0xa0, 0x20, 0x96, 0x2e, 0x2d, 0x0b, 0xe3, 0x25, 0x3d, 0xd2,
	0xd0, 0xd4, 0x17, 0xd9, 0x0e, 0xa8, 0x3b, 0x3f, 0x1c, 0xf5, 0x0a, 0xa9, 0x03, 0x5b, 0xbe, 0x97,
	0x77, 0xbe, 0x3b, 0x5b, 0x5c, 0x97, 0x0e, 0x6d, 0x61, 0xc9, 0x93, 0x8b, 0x5c, 0x66, 0xd2, 0xcc,
	0xa4, 0x09, 0xf8, 0xc8, 0xa0, 0x1f, 0x5d, 0x8e, 0x20, 0x07, 0xbb, 0x4a, 0x72, 0x4a, 0x96, 0xc1,
	0x67, 0xc4, 0xb6, 0x14, 0x3b, 0x32, 0xf8, 0x6a, 0x8a, 0xf6, 0x03, 0x99, 0xb7, 0x2c, 0x95, 0x27,
	0xa2, 0x35, 0xc6, 0xb8, 0x4c, 0x55, 0x43, 0x37, 0x86, 0x9d, 0xe9, 0x36, 0xc8, 0x53, 0xd1, 0xbd,
	0xdb, 0xe8, 0xcf, 0x54, 0x5a, 0xb5, 0xa7, 0x1b, 0xc3, 0xfe, 0x74, 0x07, 0xa4, 0x16, 0x3d, 0x0e,
	0x93, 0xcc, 0x94, 0x1e, 0x55, 0x93, 0xff, 0x87, 0xa8, 0xaa, 0x1f, 0xc3, 0xda, 0xa9, 0xfd, 0xa0,
	0x7e, 0x03, 0xe4, 0x40, 0x1c, 0x72, 0x78, 0x34, 0x10, 0xe7, 0x38, 0x57, 0x2d, 0x16, 0x6a, 0xac,
	0x72, 0x66, 0xe8, 0x5f, 0x11, 0xac, 0x6a, 0x07, 0xce, 0x0f, 0x93, 0x67, 0xa2, 0xff, 0x9b, 0x27,
	0x64, 0xfc, 0x42, 0x1d, 0xb0, 0x54, 0x87, 0xd5, 0xb4, 0x33, 0xf4, 0x63, 0x58, 0xab, 0x4e, 0x30,
	0xed, 0x16, 0x85, 0xbd, 0x78, 0xe1, 0x6e, 0xbd, 0x17, 0xef, 0x7c, 0x2e, 0x8e, 0xaa, 0x63, 0xb7,
	0x6b, 0x0b, 0xb6, 0xfe, 0x50, 0x79, 0x21, 0x8e, 0x99, 0x3c, 0x91, 0x7d, 0xa1, 0x15, 0x59, 0x4b,
	0x9f, 0xaa, 0xc7, 0x57, 0xfb, 0x8f, 0xdf, 0xdf, 0x8a, 0x1b, 0x8b, 0x05, 0xc5, 0x65, 0x96, 0xcf,
	0xd1, 0x46, 0x39, 0x78, 0x2c, 0xc0, 0x27, 0x8b, 0xcc, 0xa4, 0x7a, 0x4e, 0xe8, 0xb4, 0x21, 0xaf,
	0xd7, 0xe8, 0xb5, 0x2b, 0x8b, 0x82, 0xac, 0xd7, 0xef, 0xf0, 0x01, 0xba, 0x80, 0x64, 0x09, 0x29,
	0xba, 0xb8, 0xcd, 0x0f, 0x7b, 0xf5, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x4f, 0xec, 0xd2, 0x0f, 0x13,
	0x02, 0x00, 0x00,
}
