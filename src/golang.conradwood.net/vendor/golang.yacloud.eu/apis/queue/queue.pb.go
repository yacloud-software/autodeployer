// Code generated by protoc-gen-go.
// source: golang.yacloud.eu/apis/queue/queue.proto
// DO NOT EDIT!

/*
Package queue is a generated protocol buffer package.

It is generated from these files:
	golang.yacloud.eu/apis/queue/queue.proto

It has these top-level messages:
	NewItem
	SavedItem
*/
package queue

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import common "golang.conradwood.net/apis/common"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type NewItem struct {
	Queue    string `protobuf:"bytes,1,opt,name=Queue" json:"Queue,omitempty"`
	FilterID uint64 `protobuf:"varint,2,opt,name=FilterID" json:"FilterID,omitempty"`
	Item     []byte `protobuf:"bytes,3,opt,name=Item,proto3" json:"Item,omitempty"`
}

func (m *NewItem) Reset()                    { *m = NewItem{} }
func (m *NewItem) String() string            { return proto.CompactTextString(m) }
func (*NewItem) ProtoMessage()               {}
func (*NewItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *NewItem) GetQueue() string {
	if m != nil {
		return m.Queue
	}
	return ""
}

func (m *NewItem) GetFilterID() uint64 {
	if m != nil {
		return m.FilterID
	}
	return 0
}

func (m *NewItem) GetItem() []byte {
	if m != nil {
		return m.Item
	}
	return nil
}

type SavedItem struct {
	ID             uint64 `protobuf:"varint,1,opt,name=ID" json:"ID,omitempty"`
	Queue          string `protobuf:"bytes,2,opt,name=Queue" json:"Queue,omitempty"`
	FilterID       uint64 `protobuf:"varint,3,opt,name=FilterID" json:"FilterID,omitempty"`
	SubmissionTime uint64 `protobuf:"varint,4,opt,name=SubmissionTime" json:"SubmissionTime,omitempty"`
	Item           []byte `protobuf:"bytes,5,opt,name=Item,proto3" json:"Item,omitempty"`
	Context        []byte `protobuf:"bytes,6,opt,name=Context,proto3" json:"Context,omitempty"`
}

func (m *SavedItem) Reset()                    { *m = SavedItem{} }
func (m *SavedItem) String() string            { return proto.CompactTextString(m) }
func (*SavedItem) ProtoMessage()               {}
func (*SavedItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *SavedItem) GetID() uint64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *SavedItem) GetQueue() string {
	if m != nil {
		return m.Queue
	}
	return ""
}

func (m *SavedItem) GetFilterID() uint64 {
	if m != nil {
		return m.FilterID
	}
	return 0
}

func (m *SavedItem) GetSubmissionTime() uint64 {
	if m != nil {
		return m.SubmissionTime
	}
	return 0
}

func (m *SavedItem) GetItem() []byte {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *SavedItem) GetContext() []byte {
	if m != nil {
		return m.Context
	}
	return nil
}

func init() {
	proto.RegisterType((*NewItem)(nil), "queue.NewItem")
	proto.RegisterType((*SavedItem)(nil), "queue.SavedItem")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Queue service

type QueueClient interface {
	// submit a new item to the queue
	Submit(ctx context.Context, in *NewItem, opts ...grpc.CallOption) (*common.Void, error)
}

type queueClient struct {
	cc *grpc.ClientConn
}

func NewQueueClient(cc *grpc.ClientConn) QueueClient {
	return &queueClient{cc}
}

func (c *queueClient) Submit(ctx context.Context, in *NewItem, opts ...grpc.CallOption) (*common.Void, error) {
	out := new(common.Void)
	err := grpc.Invoke(ctx, "/queue.Queue/Submit", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Queue service

type QueueServer interface {
	// submit a new item to the queue
	Submit(context.Context, *NewItem) (*common.Void, error)
}

func RegisterQueueServer(s *grpc.Server, srv QueueServer) {
	s.RegisterService(&_Queue_serviceDesc, srv)
}

func _Queue_Submit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewItem)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueueServer).Submit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/queue.Queue/Submit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueueServer).Submit(ctx, req.(*NewItem))
	}
	return interceptor(ctx, in, info, handler)
}

var _Queue_serviceDesc = grpc.ServiceDesc{
	ServiceName: "queue.Queue",
	HandlerType: (*QueueServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Submit",
			Handler:    _Queue_Submit_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "golang.yacloud.eu/apis/queue/queue.proto",
}

func init() { proto.RegisterFile("golang.yacloud.eu/apis/queue/queue.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 272 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0x51, 0x4f, 0x4b, 0xc3, 0x30,
	0x14, 0xa7, 0x5d, 0xb7, 0xb9, 0xc7, 0xe8, 0x21, 0x28, 0x86, 0x9e, 0xca, 0x0e, 0xa3, 0xa7, 0x14,
	0xf4, 0x1b, 0x68, 0x11, 0x7a, 0x51, 0xec, 0xc4, 0x7b, 0xd7, 0x3e, 0x46, 0xa0, 0xcd, 0x9b, 0x6d,
	0xe2, 0xf4, 0xf3, 0xf8, 0x45, 0xa5, 0x49, 0xed, 0x60, 0xe0, 0x25, 0xc9, 0xef, 0xf1, 0x7e, 0x7f,
	0xf8, 0x05, 0x92, 0x03, 0x35, 0xa5, 0x3a, 0x88, 0xef, 0xb2, 0x6a, 0xc8, 0xd4, 0x02, 0x4d, 0x5a,
	0x1e, 0x65, 0x9f, 0x7e, 0x18, 0x34, 0xe8, 0x4e, 0x71, 0xec, 0x48, 0x13, 0x9b, 0x5b, 0x10, 0x89,
	0x91, 0x50, 0x91, 0xea, 0xca, 0xfa, 0x44, 0x54, 0x0b, 0x85, 0xda, 0x91, 0x2a, 0x6a, 0x5b, 0x52,
	0xe3, 0xe5, 0x68, 0x9b, 0x17, 0x58, 0x3e, 0xe3, 0x29, 0xd7, 0xd8, 0xb2, 0x6b, 0x98, 0xbf, 0x0e,
	0x1a, 0xdc, 0x8b, 0xbd, 0x64, 0x55, 0x38, 0xc0, 0x22, 0xb8, 0x7a, 0x92, 0x8d, 0xc6, 0x2e, 0xcf,
	0xb8, 0x1f, 0x7b, 0x49, 0x50, 0x4c, 0x98, 0x31, 0x08, 0x06, 0x26, 0x9f, 0xc5, 0x5e, 0xb2, 0x2e,
	0xec, 0x7b, 0xf3, 0xe3, 0xc1, 0x6a, 0x57, 0x7e, 0x62, 0x6d, 0x35, 0x43, 0xf0, 0xf3, 0xcc, 0x0a,
	0x06, 0x85, 0x9f, 0x67, 0x67, 0x0f, 0xff, 0x3f, 0x8f, 0xd9, 0x85, 0xc7, 0x16, 0xc2, 0x9d, 0xd9,
	0xb7, 0xb2, 0xef, 0x25, 0xa9, 0x37, 0xd9, 0x22, 0x0f, 0xec, 0xc6, 0xc5, 0x74, 0xca, 0x32, 0x3f,
	0x67, 0x61, 0x1c, 0x96, 0x8f, 0xa4, 0x34, 0x7e, 0x69, 0xbe, 0xb0, 0xe3, 0x3f, 0x78, 0x97, 0x8e,
	0x39, 0xd8, 0x16, 0x16, 0x56, 0x48, 0xb3, 0x50, 0xb8, 0x3a, 0xc7, 0x3a, 0xa2, 0xb5, 0x18, 0x8b,
	0x7a, 0x27, 0x59, 0x3f, 0xdc, 0xc2, 0x0d, 0x9a, 0xe9, 0x1b, 0x86, 0x3a, 0xdd, 0xfa, 0x7e, 0x61,
	0x7b, 0xbc, 0xff, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x02, 0x34, 0xa1, 0xcf, 0xaa, 0x01, 0x00, 0x00,
}
