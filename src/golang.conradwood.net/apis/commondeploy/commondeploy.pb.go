// Code generated by protoc-gen-go.
// source: protos/golang.conradwood.net/apis/commondeploy/commondeploy.proto
// DO NOT EDIT!

/*
Package commondeploy is a generated protocol buffer package.

It is generated from these files:
	protos/golang.conradwood.net/apis/commondeploy/commondeploy.proto

It has these top-level messages:
	MkenvRequest
	MkenvResponse
	CacheRequest
	CacheEntry
	DerivedCacheEntry
	OnDiskStateList
	OnDiskMountEntry
*/
package commondeploy

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "golang.conradwood.net/apis/common"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// message to make an environment, e.g. prep chroots
type MkenvRequest struct {
	RootFileSystemID string `protobuf:"bytes,1,opt,name=RootFileSystemID" json:"RootFileSystemID,omitempty"`
	TargetDirectory  string `protobuf:"bytes,2,opt,name=TargetDirectory" json:"TargetDirectory,omitempty"`
	UseOverlayFS     bool   `protobuf:"varint,3,opt,name=UseOverlayFS" json:"UseOverlayFS,omitempty"`
	MountProc        bool   `protobuf:"varint,4,opt,name=MountProc" json:"MountProc,omitempty"`
	MountDev         bool   `protobuf:"varint,5,opt,name=MountDev" json:"MountDev,omitempty"`
	MountSys         bool   `protobuf:"varint,6,opt,name=MountSys" json:"MountSys,omitempty"`
}

func (m *MkenvRequest) Reset()                    { *m = MkenvRequest{} }
func (m *MkenvRequest) String() string            { return proto.CompactTextString(m) }
func (*MkenvRequest) ProtoMessage()               {}
func (*MkenvRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *MkenvRequest) GetRootFileSystemID() string {
	if m != nil {
		return m.RootFileSystemID
	}
	return ""
}

func (m *MkenvRequest) GetTargetDirectory() string {
	if m != nil {
		return m.TargetDirectory
	}
	return ""
}

func (m *MkenvRequest) GetUseOverlayFS() bool {
	if m != nil {
		return m.UseOverlayFS
	}
	return false
}

func (m *MkenvRequest) GetMountProc() bool {
	if m != nil {
		return m.MountProc
	}
	return false
}

func (m *MkenvRequest) GetMountDev() bool {
	if m != nil {
		return m.MountDev
	}
	return false
}

func (m *MkenvRequest) GetMountSys() bool {
	if m != nil {
		return m.MountSys
	}
	return false
}

type MkenvResponse struct {
}

func (m *MkenvResponse) Reset()                    { *m = MkenvResponse{} }
func (m *MkenvResponse) String() string            { return proto.CompactTextString(m) }
func (*MkenvResponse) ProtoMessage()               {}
func (*MkenvResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type CacheRequest struct {
	URL string `protobuf:"bytes,1,opt,name=URL" json:"URL,omitempty"`
}

func (m *CacheRequest) Reset()                    { *m = CacheRequest{} }
func (m *CacheRequest) String() string            { return proto.CompactTextString(m) }
func (*CacheRequest) ProtoMessage()               {}
func (*CacheRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CacheRequest) GetURL() string {
	if m != nil {
		return m.URL
	}
	return ""
}

type CacheEntry struct {
	CachedURL           string               `protobuf:"bytes,1,opt,name=CachedURL" json:"CachedURL,omitempty"`
	Downloading         bool                 `protobuf:"varint,2,opt,name=Downloading" json:"Downloading,omitempty"`
	DownloadStarted     uint32               `protobuf:"varint,3,opt,name=DownloadStarted" json:"DownloadStarted,omitempty"`
	Downloaded          bool                 `protobuf:"varint,4,opt,name=Downloaded" json:"Downloaded,omitempty"`
	DownloadedTimestamp uint32               `protobuf:"varint,5,opt,name=DownloadedTimestamp" json:"DownloadedTimestamp,omitempty"`
	LastError           string               `protobuf:"bytes,6,opt,name=LastError" json:"LastError,omitempty"`
	Failures            uint32               `protobuf:"varint,7,opt,name=Failures" json:"Failures,omitempty"`
	CacheDir            string               `protobuf:"bytes,8,opt,name=CacheDir" json:"CacheDir,omitempty"`
	DerivedEntries      []*DerivedCacheEntry `protobuf:"bytes,9,rep,name=DerivedEntries" json:"DerivedEntries,omitempty"`
	LastUsed            uint32               `protobuf:"varint,10,opt,name=LastUsed" json:"LastUsed,omitempty"`
}

func (m *CacheEntry) Reset()                    { *m = CacheEntry{} }
func (m *CacheEntry) String() string            { return proto.CompactTextString(m) }
func (*CacheEntry) ProtoMessage()               {}
func (*CacheEntry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CacheEntry) GetCachedURL() string {
	if m != nil {
		return m.CachedURL
	}
	return ""
}

func (m *CacheEntry) GetDownloading() bool {
	if m != nil {
		return m.Downloading
	}
	return false
}

func (m *CacheEntry) GetDownloadStarted() uint32 {
	if m != nil {
		return m.DownloadStarted
	}
	return 0
}

func (m *CacheEntry) GetDownloaded() bool {
	if m != nil {
		return m.Downloaded
	}
	return false
}

func (m *CacheEntry) GetDownloadedTimestamp() uint32 {
	if m != nil {
		return m.DownloadedTimestamp
	}
	return 0
}

func (m *CacheEntry) GetLastError() string {
	if m != nil {
		return m.LastError
	}
	return ""
}

func (m *CacheEntry) GetFailures() uint32 {
	if m != nil {
		return m.Failures
	}
	return 0
}

func (m *CacheEntry) GetCacheDir() string {
	if m != nil {
		return m.CacheDir
	}
	return ""
}

func (m *CacheEntry) GetDerivedEntries() []*DerivedCacheEntry {
	if m != nil {
		return m.DerivedEntries
	}
	return nil
}

func (m *CacheEntry) GetLastUsed() uint32 {
	if m != nil {
		return m.LastUsed
	}
	return 0
}

type DerivedCacheEntry struct {
	FileID    string `protobuf:"bytes,1,opt,name=FileID" json:"FileID,omitempty"`
	FileRef   string `protobuf:"bytes,2,opt,name=FileRef" json:"FileRef,omitempty"`
	Function  string `protobuf:"bytes,3,opt,name=Function" json:"Function,omitempty"`
	Deriving  bool   `protobuf:"varint,4,opt,name=Deriving" json:"Deriving,omitempty"`
	Completed bool   `protobuf:"varint,5,opt,name=Completed" json:"Completed,omitempty"`
	LastUsed  uint32 `protobuf:"varint,6,opt,name=LastUsed" json:"LastUsed,omitempty"`
}

func (m *DerivedCacheEntry) Reset()                    { *m = DerivedCacheEntry{} }
func (m *DerivedCacheEntry) String() string            { return proto.CompactTextString(m) }
func (*DerivedCacheEntry) ProtoMessage()               {}
func (*DerivedCacheEntry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *DerivedCacheEntry) GetFileID() string {
	if m != nil {
		return m.FileID
	}
	return ""
}

func (m *DerivedCacheEntry) GetFileRef() string {
	if m != nil {
		return m.FileRef
	}
	return ""
}

func (m *DerivedCacheEntry) GetFunction() string {
	if m != nil {
		return m.Function
	}
	return ""
}

func (m *DerivedCacheEntry) GetDeriving() bool {
	if m != nil {
		return m.Deriving
	}
	return false
}

func (m *DerivedCacheEntry) GetCompleted() bool {
	if m != nil {
		return m.Completed
	}
	return false
}

func (m *DerivedCacheEntry) GetLastUsed() uint32 {
	if m != nil {
		return m.LastUsed
	}
	return 0
}

type OnDiskStateList struct {
	MountEntries []*OnDiskMountEntry `protobuf:"bytes,1,rep,name=MountEntries" json:"MountEntries,omitempty"`
}

func (m *OnDiskStateList) Reset()                    { *m = OnDiskStateList{} }
func (m *OnDiskStateList) String() string            { return proto.CompactTextString(m) }
func (*OnDiskStateList) ProtoMessage()               {}
func (*OnDiskStateList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *OnDiskStateList) GetMountEntries() []*OnDiskMountEntry {
	if m != nil {
		return m.MountEntries
	}
	return nil
}

type OnDiskMountEntry struct {
	Filesystem string `protobuf:"bytes,1,opt,name=Filesystem" json:"Filesystem,omitempty"`
	Target     string `protobuf:"bytes,2,opt,name=Target" json:"Target,omitempty"`
}

func (m *OnDiskMountEntry) Reset()                    { *m = OnDiskMountEntry{} }
func (m *OnDiskMountEntry) String() string            { return proto.CompactTextString(m) }
func (*OnDiskMountEntry) ProtoMessage()               {}
func (*OnDiskMountEntry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *OnDiskMountEntry) GetFilesystem() string {
	if m != nil {
		return m.Filesystem
	}
	return ""
}

func (m *OnDiskMountEntry) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func init() {
	proto.RegisterType((*MkenvRequest)(nil), "commondeploy.MkenvRequest")
	proto.RegisterType((*MkenvResponse)(nil), "commondeploy.MkenvResponse")
	proto.RegisterType((*CacheRequest)(nil), "commondeploy.CacheRequest")
	proto.RegisterType((*CacheEntry)(nil), "commondeploy.CacheEntry")
	proto.RegisterType((*DerivedCacheEntry)(nil), "commondeploy.DerivedCacheEntry")
	proto.RegisterType((*OnDiskStateList)(nil), "commondeploy.OnDiskStateList")
	proto.RegisterType((*OnDiskMountEntry)(nil), "commondeploy.OnDiskMountEntry")
}

func init() {
	proto.RegisterFile("protos/golang.conradwood.net/apis/commondeploy/commondeploy.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 556 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x54, 0xdd, 0x6e, 0xd3, 0x4c,
	0x10, 0x95, 0xbf, 0x7c, 0xa4, 0xc9, 0x34, 0x25, 0x61, 0x91, 0x90, 0x55, 0xa1, 0x12, 0xf9, 0x86,
	0xc0, 0x45, 0x82, 0xe0, 0x09, 0x28, 0x6e, 0x10, 0x28, 0x55, 0xd1, 0xba, 0x79, 0x80, 0xc5, 0x1e,
	0xc2, 0xaa, 0xf6, 0xae, 0xd9, 0xdd, 0xa4, 0xf2, 0x35, 0x0f, 0xc5, 0xdb, 0xf0, 0x2c, 0x68, 0xd7,
	0xff, 0x29, 0x12, 0x57, 0xf6, 0x39, 0x33, 0xb3, 0x9e, 0x73, 0x76, 0x3c, 0xf0, 0x3e, 0x57, 0xd2,
	0x48, 0xbd, 0xda, 0xc9, 0x94, 0x89, 0xdd, 0x32, 0x96, 0x42, 0xb1, 0xe4, 0x5e, 0xca, 0x64, 0x29,
	0xd0, 0xac, 0x58, 0xce, 0xf5, 0x2a, 0x96, 0x59, 0x26, 0x45, 0x82, 0x79, 0x2a, 0x8b, 0x1e, 0x58,
	0xba, 0x5a, 0x32, 0xe9, 0x72, 0xe7, 0xcb, 0x7f, 0x9e, 0x54, 0x3d, 0xca, 0xea, 0xe0, 0xb7, 0x07,
	0x93, 0xeb, 0x3b, 0x14, 0x07, 0x8a, 0x3f, 0xf6, 0xa8, 0x0d, 0x79, 0x0d, 0x33, 0x2a, 0xa5, 0x59,
	0xf3, 0x14, 0xa3, 0x42, 0x1b, 0xcc, 0x3e, 0x85, 0xbe, 0x37, 0xf7, 0x16, 0x63, 0xfa, 0x80, 0x27,
	0x0b, 0x98, 0xde, 0x32, 0xb5, 0x43, 0x13, 0x72, 0x85, 0xb1, 0x91, 0xaa, 0xf0, 0xff, 0x73, 0xa9,
	0xc7, 0x34, 0x09, 0x60, 0xb2, 0xd5, 0x78, 0x73, 0x40, 0x95, 0xb2, 0x62, 0x1d, 0xf9, 0x83, 0xb9,
	0xb7, 0x18, 0xd1, 0x1e, 0x47, 0x9e, 0xc3, 0xf8, 0x5a, 0xee, 0x85, 0xf9, 0xa2, 0x64, 0xec, 0xff,
	0xef, 0x12, 0x5a, 0x82, 0x9c, 0xc3, 0xc8, 0x81, 0x10, 0x0f, 0xfe, 0x23, 0x17, 0x6c, 0x70, 0x13,
	0x8b, 0x0a, 0xed, 0x0f, 0x3b, 0xb1, 0xa8, 0xd0, 0xc1, 0x14, 0xce, 0x2a, 0x7d, 0x3a, 0x97, 0x42,
	0x63, 0x30, 0x87, 0xc9, 0x07, 0x16, 0x7f, 0xc7, 0x5a, 0xf0, 0x0c, 0x06, 0x5b, 0xba, 0xa9, 0x34,
	0xda, 0xd7, 0xe0, 0xe7, 0x00, 0xc0, 0xa5, 0x5c, 0x09, 0xa3, 0x0a, 0xdb, 0x97, 0x43, 0x49, 0x9b,
	0xd6, 0x12, 0x64, 0x0e, 0xa7, 0xa1, 0xbc, 0x17, 0xa9, 0x64, 0x09, 0x17, 0x3b, 0xa7, 0x7f, 0x44,
	0xbb, 0x94, 0x75, 0xa9, 0x86, 0x91, 0x61, 0xca, 0x60, 0xe2, 0xe4, 0x9f, 0xd1, 0x63, 0x9a, 0x5c,
	0x00, 0xd4, 0x14, 0x26, 0x95, 0x05, 0x1d, 0x86, 0xbc, 0x81, 0xa7, 0x2d, 0xba, 0xe5, 0x19, 0x6a,
	0xc3, 0xb2, 0xdc, 0xd9, 0x71, 0x46, 0xff, 0x16, 0xb2, 0xbd, 0x6f, 0x98, 0x36, 0x57, 0x4a, 0x49,
	0xe5, 0xac, 0x19, 0xd3, 0x96, 0xb0, 0xbe, 0xad, 0x19, 0x4f, 0xf7, 0x0a, 0xb5, 0x7f, 0xe2, 0x0e,
	0x69, 0xb0, 0x8d, 0x39, 0x91, 0x21, 0x57, 0xfe, 0xc8, 0x15, 0x36, 0x98, 0x7c, 0x84, 0xc7, 0x21,
	0x2a, 0x7e, 0xc0, 0xc4, 0x3a, 0xc4, 0x51, 0xfb, 0xe3, 0xf9, 0x60, 0x71, 0xfa, 0xf6, 0xc5, 0xb2,
	0x37, 0x9f, 0x55, 0x4e, 0x6b, 0x25, 0x3d, 0x2a, 0xb3, 0x1f, 0xb1, 0xdd, 0x6c, 0x35, 0x26, 0x3e,
	0x94, 0x0d, 0xd4, 0x38, 0xf8, 0xe5, 0xc1, 0x93, 0x07, 0x27, 0x90, 0x67, 0x30, 0xb4, 0x23, 0xd8,
	0x0c, 0x65, 0x85, 0x88, 0x0f, 0x27, 0xf6, 0x8d, 0xe2, 0xb7, 0x6a, 0x04, 0x6b, 0xe8, 0x44, 0xee,
	0x45, 0x6c, 0xb8, 0x14, 0xce, 0xf7, 0x31, 0x6d, 0xb0, 0x8d, 0xb9, 0x4f, 0xd8, 0x9b, 0x2b, 0xed,
	0x6e, 0xb0, 0xbb, 0x76, 0x99, 0xe5, 0x29, 0xda, 0x0b, 0x2b, 0x27, 0xae, 0x25, 0x7a, 0x9d, 0x0f,
	0x8f, 0x3a, 0xdf, 0xc2, 0xf4, 0x46, 0x84, 0x5c, 0xdf, 0x45, 0x86, 0x19, 0xdc, 0x70, 0x6d, 0xc8,
	0x25, 0x4c, 0xdc, 0x44, 0xd6, 0x7e, 0x79, 0xce, 0xaf, 0x8b, 0xbe, 0x5f, 0x65, 0x51, 0x93, 0x57,
	0xd0, 0x5e, 0x4d, 0xf0, 0x19, 0x66, 0xc7, 0x19, 0x76, 0x62, 0xac, 0x4e, 0xed, 0xfe, 0xc8, 0xca,
	0x92, 0x0e, 0x63, 0xed, 0x2a, 0x7f, 0xc5, 0xca, 0x95, 0x0a, 0x5d, 0xbe, 0x82, 0x97, 0x02, 0x4d,
	0x77, 0x4b, 0x54, 0x7b, 0xc3, 0x2e, 0x8a, 0x5e, 0x57, 0x5f, 0x87, 0x6e, 0x51, 0xbc, 0xfb, 0x13,
	0x00, 0x00, 0xff, 0xff, 0x9a, 0x45, 0x82, 0xd7, 0xab, 0x04, 0x00, 0x00,
}
